gen_secrets() {
	for i in channels {
		
		key_i = gen_channel_key()

	}
}

gen_channel_key() {
	mask_key = random()
	msg_key = random()
	subscription_key = random() //TBD
}


frame = [channel, data, timestamp]

subscription = [channel, device_ID, start_time, end_time]



ENCODER:

encode(frame) {
	nonce = rand 16 bytes

	A, B = split(nonce)

	timestamp_prime = A + timestamp + B

	cipher_1 = encrypt(hash(mask XOR timestamp) XOR msg_key, timestamp_prime)

	cipher_2 = encrypt(nonce, data)

	return channel + timestamp + cipher_1 + cipher_2 (as a byte string)
}






DECODER:

decode(msg) {
	structure of msg: channel (4 bytes), timestamp (8 bytes), cipher_1 (32 bytes), cipher_2 (the rest)	

	channel, timestamp, cipher_1, cipher_2 = extract_msg()

	rand_num = random()

	message_key = global_secrets.msg_key XOR rand_num

	timestamp_prime = decrypt(hash(message_key XOR timestamp) XOR message_key XOR rand_num)

	nonce = extract_nonce(timestamp_prime)

	data = decrypt(nonce, cipher_2)

	// check validity

	timestamp_current > timestamp_prev

	timestamp_in_range()

	// if any is invalid, reject (throw error?)

	return data (or something idk)
}